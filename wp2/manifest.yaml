apiVersion: v1
kind: Namespace
metadata:
  name: wordpress

---

apiVersion: v1
data:
  MYSQL_DATABASE: wordpress
  MYSQL_USER: wp_user
  WORDPRESS_DB_HOST: db-svc
  WORDPRESS_DB_NAME: wordpress
  WORDPRESS_DB_USER: wp_user
kind: ConfigMap
metadata:
  name: settings

---

apiVersion: v1
data:
  MYSQL_PASSWORD: ZW5kMzIx
  MYSQL_ROOT_PASSWORD: dG9wLnNlY3JldA==
  WORDPRESS_DB_PASSWORD: ZW5kMzIx
kind: Secret
metadata:
  name: app-secrets

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume-db
spec:
  accessModes:
  - ReadWriteOnce
  # storageClassName: ""
  resources:
    requests:
      storage: 300Mi
      # selector:
      #   matchLabels:
      #     app: nginx

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volume-wp
spec:
  accessModes:
  - ReadWriteOnce
  # storageClassName: ""
  resources:
    requests:
      storage: 300Mi
      # selector:
      #   matchLabels:
      #     app: nginx

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db
  name: wp-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy: {}
  template:
    metadata:
      labels:
        app: db
        tier: backend
        env: prod
        customer: wp-app
    spec:
      containers:
      - image: mysql # mysql / mariadb:10
        name: mysql
        volumeMounts:
        - name: pvc-db
          mountPath: "/var/lib/mysql"
        resources: {}
        env:
        - name: TZ
          value: Europe/Bratislava
        # - name: MYSQL_ROOT_PASSWORD
        #   value: top.secret
        # - name: MYSQL_PASSWORD
        #   value: end321
        # - name: MYSQL_DATABASE
        #   value: wordpress
        # - name: MYSQL_USER
        #   value: wp_user
        envFrom:
        - configMapRef:
            name: settings
        - secretRef:
            name: app-secrets
      volumes:
      - name: pvc-db
        persistentVolumeClaim:
          claimName: volume-db

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db-svc
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: db
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adminer
  name: wp-adminer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adminer
  strategy: {}
  template:
    metadata:
      labels:
        app: adminer
        tier: frontend
        env: dev
        customer: wp-app
    spec:
      containers:
      - image: adminer
        name: adminer
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: adminer
  name: adminer-svc
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 31500
  selector:
    app: adminer
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: wp
  name: wp-wp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wp
  strategy: {}
  template:
    metadata:
      labels:
        app: wp
        tier: frontend
        env: prod
        customer: wp-app
    spec:
      containers:
      - image: wordpress
        name: wordpress
        volumeMounts:
        - name: pvc-wp
          mountPath: "/var/www/html"
        resources: {}
        envFrom:
        - configMapRef:
            name: settings
        - secretRef:
            name: app-secrets
            # env:
            # - name: WORDPRESS_DB_HOST
            #   value: db-svc
            # - name: WORDPRESS_DB_NAME
            #   value: wordpress
            # - name: WORDPRESS_DB_USER
            #   value: wp_user
            # - name: WORDPRESS_DB_PASSWORD
            #   value: end321
      volumes:
      - name: pvc-wp
        persistentVolumeClaim:
          claimName: volume-wp

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: wp
  name: wp-svc
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 80
  selector:
    app: wp
  type: LoadBalancer
# status:
#   loadBalancer: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  # namespace: storage
spec:
  rules:
  - host: www.wp.sk
    http:
      paths:
      - backend:
          service:
            name: wp-svc
            port:
              number: 8000
        path: /
        pathType: Prefix # Prefix

