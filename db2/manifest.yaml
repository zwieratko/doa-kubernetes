apiVersion: v1
kind: Namespace
metadata:
  name: db

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: app-settings
  # namespace: application
data:
  TZ: Europe/Bratislava
  # units: metric
  # update_interval: "20"

---

apiVersion: v1
kind: Secret
metadata:
  name: app-credentials
  # namespace: application
data:
  MYSQL_ROOT_PASSWORD: dG9wLnNlY3JldA==
  POSTGRES_PASSWORD: dG9wLnNlY3JldA==
  # dG9wLnNlY3JldA==     top.secret
  # c2VjcmV0             secret
  # cmFkbw==             rado

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mdb10
  name: mdb10
  # namespace: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mdb10
  template:
    metadata:
      labels:
        app: mdb10
    spec:
      containers:
      - image: mariadb:10
        name: mariadb
        # ports:
        # - containerPort: 3306
        envFrom:
        - configMapRef:
            name: app-settings
        - secretRef:
            name: app-credentials
        # env:
        # - name: TZ
        #   value: Europe/Bratislava
        # - name: MYSQL_ROOT_PASSWORD
        #   value: rado
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mdb10

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mdb10
  name: mdb10
  # namespace: application
spec:
  ports:
  - name: www
    port: 3306
    protocol: TCP
    # targetPort: 80
    # nodePort: 30000
  selector:
    app: mdb10
    # type: NodePort

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mdb10
spec:
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  capacity: # how much
    storage: 300Mi
  accessModes: # additional params
  - ReadWriteOnce
  hostPath: # volume type params
    path: "/mnt/mdb10"
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mdb10
  # namespace: application
  labels:
    app: mdb10
spec:
  storageClassName: "" # Empty string must be explicitly set otherwise default StorageClass will be set
  accessModes: # params
  - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: adminer
  name: adminer
  # namespace: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
      - image: adminer
        name: adminer
        ports:
        - containerPort: 8080
          # envFrom:
          # - configMapRef:
          #     name: app-config
          # - secretRef:
          #     name: secrets

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: adminer
  name: adminer
  # namespace: application
spec:
  ports:
  - name: www
    port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 31500
  selector:
    app: adminer
  type: NodePort

